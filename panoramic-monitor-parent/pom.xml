<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.it.sunder</groupId>
	<artifactId>panoramic-monitor-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>


	<properties>
		<dependency.container>provided</dependency.container>
		<dependency.common>provided</dependency.common>
		<spring-boot.version>1.5.4.RELEASE</spring-boot.version>
		<mapstruct.version>1.1.0.Final</mapstruct.version>
		<java.version>1.8</java.version>
		<encoding.version>UTF-8</encoding.version>

		<spring.boot.version>1.5.4.RELEASE</spring.boot.version>
		<spring-cloud-dependencies.version>Dalston.SR2</spring-cloud-dependencies.version>

		<jackson2.version>2.6.5</jackson2.version>
		<apache.httpcomponents.client.version>4.3.6</apache.httpcomponents.client.version>
		<!-- need changed the well version if need -->
		<apache.httpcomponents.core.version>4.3.3</apache.httpcomponents.core.version>

		<!-- commons start -->
		<commons-jsonp-version>1.9.2</commons-jsonp-version>
		<commons-fileupload.version>1.3.1</commons-fileupload.version>
		<commons-beanutils.version>1.9.2</commons-beanutils.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-betwixt.version>0.8</commons-betwixt.version>
		<commons-collections.version>3.2.2</commons-collections.version>
		<commons-configuration.version>1.8</commons-configuration.version>
		<commons-digester.version>1.8.1</commons-digester.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-logging.version>1.1.3</commons-logging.version>
		<commons-pool.version>1.6</commons-pool.version>
		<commons-validator.version>1.3.1</commons-validator.version>
		<commons-httpclient.version>3.1</commons-httpclient.version>
		<commons-codec.version>1.10</commons-codec.version>
		<commons-discovery.version>0.2</commons-discovery.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<commons-net.version>3.3</commons-net.version>

		<commons-spymemcached.version>2.11.7</commons-spymemcached.version>
		<commons-ehcache.version>2.6.9</commons-ehcache.version>

		<lombok.version>1.16.6</lombok.version>
		<!-- Log libs -->
		<slf4j.version>1.7.9</slf4j.version><!-- 1.7.9 -->
		<log4j.version>1.2.17</log4j.version><!-- 1.2.17 -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version> <!--此处不能使用SR3,会出现jar版本异常 -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- swagger2 -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.4.0</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.4.0</version>
			</dependency>
			<!-- AliBaBa -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.29</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.1.5</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>1.1.0</version>
			</dependency>

			<!--MyBatis 及 插件依赖 start -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.42</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.2.8</version>
			</dependency>
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper</artifactId>
				<version>3.3.9</version>
			</dependency>
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>4.1.6</version>
			</dependency>
			<!-- MyBatis 及 插件依赖 end -->
			<!-- 缓存 start -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${commons-ehcache.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>net.spy</groupId>
				<artifactId>spymemcached</artifactId>
				<version>${commons-spymemcached.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<!-- 缓存 end -->
			<!-- hessian 远程调用 -->
			<dependency>
				<groupId>com.caucho</groupId>
				<artifactId>hessian</artifactId>
				<version>4.0.38</version>
			</dependency>
			<!-- jackson序列化包 start -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson2.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson2.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson2.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.4</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>${jackson2.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson2.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-smile</artifactId>
				<version>${jackson2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-cbor</artifactId>
				<version>${jackson2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson2.version}</version>
			</dependency>
			<!-- jackson序列化包 end -->

			<!-- httpclient start -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${apache.httpcomponents.client.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${apache.httpcomponents.core.version}</version> <!--4.2.5 -->
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${apache.httpcomponents.client.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${commons-jsonp-version}</version>
			</dependency>
			<!-- httpclient end -->

			<!-- 异步httpclient start -->
			<dependency>
				<groupId>com.ning</groupId>
				<artifactId>async-http-client</artifactId>
				<version>1.8.14</version>
			</dependency>
			<dependency>
				<groupId>org.asynchttpclient</groupId>
				<artifactId>async-http-client</artifactId>
				<version>2.0.24</version>
			</dependency>
			<dependency>
				<groupId>com.ning</groupId>
				<artifactId>async-http-client</artifactId>
				<version>1.8.14</version>
				<exclusions>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>3.9.5.Final</version>
			</dependency>
			<!-- 异步httpclient end -->

			<!-- 基础依赖 start -->
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.20.0-GA</version>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>18.0.1</version>
				<scope>${dependency.container}</scope>
			</dependency>
			<!-- 基础依赖 end -->
			<!-- log 依赖包 start -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-ext</artifactId>
				<version>${slf4j.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<!-- log 依赖 end -->
			<!-- xml 依赖 start -->
			<dependency>
				<groupId>org.apache.xmlbeans</groupId>
				<artifactId>xmlbeans</artifactId>
				<version>2.6.0</version>
				<scope>${dependency.common}</scope>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>xml</groupId>
				<artifactId>resolver</artifactId>
				<version>1.2</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.schema</groupId>
				<artifactId>XmlSchema</artifactId>
				<version>1.4.7</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>xmlsec</groupId>
				<artifactId>xmlsec</artifactId>
				<version>1.4.6</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.7</version>
				<scope>${dependency.common}</scope>
				<exclusions>
					<exclusion>
						<groupId>xpp3</groupId>
						<artifactId>xpp3_min</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>2.9.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>2.9.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-x-discovery</artifactId>
				<version>2.9.1</version>
				<exclusions>
					<exclusion>
						<artifactId>jackson-mapper-asl</artifactId>
						<groupId>org.codehaus.jackson</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- xml 依赖包 end -->

			<!-- commons依赖 start -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${commons-net.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-betwixt</groupId>
				<artifactId>commons-betwixt</artifactId>
				<version>${commons-betwixt.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons-configuration.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons-digester.version}</version>
				<scope>${dependency.common}</scope>
				<exclusions>
					<exclusion>
						<groupId>commons-beanutils</groupId>
						<artifactId>commons-beanutils</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-exec</artifactId>
				<version>1.3</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons-pool.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons-validator.version}</version>
				<scope>${dependency.common}</scope>
				<exclusions>
					<exclusion>
						<groupId>commons-beanutils</groupId>
						<artifactId>commons-beanutils</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
				<scope>${dependency.common}</scope>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${apache.httpcomponents.client.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${apache.httpcomponents.core.version}</version> <!--4.2.5 -->
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${apache.httpcomponents.client.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<dependency>
				<groupId>org.im4java</groupId>
				<artifactId>im4java</artifactId>
				<version>1.4.0</version>
				<scope>${dependency.common}</scope>
			</dependency>
			<!-- commons依赖 end -->
			<!-- javaEE 依赖支持 start -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>
			<!-- javaEE 依赖支持 end -->
			<!-- quartz 模块 -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<!-- 热部署 -->
			<!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现） -->
			<!-- 实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 -->
			<!-- 即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的 -->

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<version>${spring.boot.version}</version>
				<!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖boot项目的项目如果想要使用devtools，需要重新引入 -->
				<optional>true</optional>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.14</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>
	<modules>
		<module>../panoramic-monitor-common</module>
		<module>../panoramic-monitor-discovery-eureka</module>
		<module>../panoramic-monitor-test</module>
		<module>../panoramic-monitor-config-server</module>
		<module>../panoramic-monitor-config-client</module>
		<module>../panoramic-monitor-user</module>
		<module>../panoramic-monitor-scheduled-task</module>
		<module>../panoramic-monitor-risk-warning</module>
		<module>../panoramic-monitor-manage</module>
		<module>../panoramic-monitor-invoke</module>
		<module>../panoramic-monitor-doc</module>
		<module>../panoramic-monitor-gateway-zuul</module>

	</modules>

	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
					<configuration>
						<fork>true</fork>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.12</version>
				<configuration>
					<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
					<!-- 详见：https://github.com/spotify/docker-maven-plugin Invalid repository 
						name ... only [a-z0-9-_.] are allowed -->
					<imageName>${project.artifactId}</imageName>
					<!-- 指定Dockerfile所在的路径 -->
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<baseImage>java</baseImage>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
			</plugin>
		</plugins>
	</build>
</project>